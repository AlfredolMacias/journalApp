{"version":3,"sources":["firebase/firebase-config.js","hooks/useForm.js","types/types.js","actions/ui.js","helpers/fileUpload.js","helpers/loadNotes.js","actions/notes.js","actions/auth.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PrivateRoute.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/uiReducers.js","reducers/notesReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","useForm","initialState","useState","values","setValues","reset","setNewValues","handleInputChange","target","name","value","types","setError","err","type","payload","uiFinishLoading","fileUpload","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","cloudRes","secure_url","loadNotes","uid","collection","get","notesSnap","notes","forEach","snapHijo","push","id","data","activeNote","note","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNote","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","console","log","login","displayName","catch","e","message","logout","LoginScreen","useDispatch","loading","useSelector","state","ui","formValues","className","onSubmit","preventDefault","placeholder","autoComplete","onChange","disabled","onClick","signInWithPopup","src","alt","to","RegisterScreen","msgError","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPassword","AuthRouter","path","component","exact","PrivateRoute","isAuthenticated","Component","rest","localStorage","setItem","location","pathname","props","PropTypes","propTypes","bool","isRequired","func","NotesAppBar","active","style","display","files","text","allowOutsideClick","showConfirmButton","onBeforeOpen","showLoading","fileUrl","close","startUploading","document","querySelector","click","NoteScreen","activeId","useRef","useEffect","current","delete","startDeleting","NothingSelected","JournalEntry","date","noteDate","moment","backgroundSize","backgroundImage","format","JournalEntries","map","Sidebar","signOut","newNote","Date","getTime","add","JournalScreen","PublicRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"8PAgCAA,IAASC,cA5Bc,CACnBC,OAASC,0CACTC,WAAYD,qCACZE,UAAUF,qBACVG,cAAeH,iCACfI,kBAAmBJ,eACnBK,MAAQL,8CAwBZ,IAAMM,EAAKT,IAASU,YACdC,EAAqB,IAAIX,IAASY,KAAKC,mB,eChChCC,EAAU,WAA0B,IAAxBC,EAAuB,uDAAR,GAAQ,EAEhBC,mBAASD,GAFO,mBAErCE,EAFqC,KAE7BC,EAF6B,KAItCC,EAAQ,WAAkC,IAAjCC,EAAgC,uDAAjBL,EAC1BG,EAAWE,IAITC,EAAoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEzBJ,EAAU,2BACHD,GADE,kBAEHK,EAAOC,KAAQD,EAAOE,UAKhC,MAAO,CAAEP,EAAQI,EAAmBF,ICrB3BM,EACF,eADEA,EAED,gBAFCA,EAIG,iBAJHA,EAKM,oBALNA,EAOO,qBAPPA,EAQQ,sBARRA,EAUI,oBAVJA,EAWI,2BAXJA,EAYE,qBAZFA,EAaK,sBAbLA,EAeI,sBAfJA,EAgBY,0BCdZC,EAAW,SAAEC,GAAF,MAAY,CAChCC,KAAOH,EACPI,QAASF,IAYAG,EAAkB,iBAAO,CAClCF,KAAMH,I,iBChBGM,EAAU,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,4DAEL,gDAEXC,EAAW,IAAIC,UACZC,OAAO,gBAAiB,iBACjCF,EAASE,OAAO,OAAQJ,GANF,kBASCK,MAPN,+CAOsB,CAC/BC,OAAS,OACTC,KAAML,IAXQ,YASZM,EATY,QAcTC,GAdS,kCAeSD,EAAKE,OAfd,eAeRC,EAfQ,yBAgBPA,EAASC,YAhBF,iCAkBP,MAlBO,+HAAH,sDCCVC,EAAS,uCAAG,WAAOC,GAAP,iBAAAb,EAAA,sEAGGxB,EAAGsC,WAAH,UAAiBD,EAAjB,mBAAsCE,MAHzC,cAGfC,EAHe,OAIfC,EAAQ,GACdD,EAAUE,SAAS,SAAAC,GACfF,EAAMG,KAAN,aACIC,GAAIF,EAASE,IACVF,EAASG,YARC,kBAYdL,GAZc,2CAAH,sDC0BTM,EAAa,SAAEF,EAAIG,GAAN,MAAiB,CAEvC7B,KAAMH,EACNI,QAAQ,aACJyB,MACGG,KAKEC,EAAa,SAACJ,EAAIG,GAAL,MAAe,CACrC7B,KAAMH,EACNI,QAAQ,aACJyB,MACGG,KAKEE,EAAoB,SAAEb,GAC/B,8CAAO,WAAOc,GAAP,eAAA3B,EAAA,sEACiBY,EAAWC,GAD5B,OACGI,EADH,OAEHU,EAAUC,EAAUX,IAFjB,2CAAP,uDASSW,EAAW,SAAEX,GAAF,MAAc,CAClCtB,KAAMH,EACNI,QAASqB,IAGAY,EAAgB,SAAEL,GAC3B,8CAAO,WAAQG,EAAUG,GAAlB,iBAAA9B,EAAA,6DAEKa,EAAQiB,IAAWnD,KAAnBkC,IAEHW,EAAKO,YACCP,EAAKO,WAGVC,EARH,eAQ0BR,IACNH,GATpB,SAWG7C,EAAGyD,IAAH,UAAUpB,EAAV,0BAA+BW,EAAKH,KAAMa,OAAQF,GAXrD,OAaHL,EAAUQ,EAAaX,EAAKH,GAAIW,IAChCI,IAAKC,KAAK,QAASb,EAAKc,MAAO,WAd5B,2CAAP,yDAkBSH,EAAc,SAAEd,EAAIG,GAAN,MAAiB,CAExC7B,KAAMH,EACNI,QAAS,CACLyB,KACAG,KAAK,aACDH,MACGG,MAyCFe,EAAa,SAAElB,GAAF,MAAW,CACjC1B,KAAMH,EACNI,QAASyB,IC7HAmB,EAA0B,SAAEC,EAAOC,GAC5C,OAAO,SAAEf,GACLA,EJI6B,CACjChC,KAAMH,IIJFzB,IAASY,OAAOgE,2BAA2BF,EAAOC,GAC7CE,MAAM,YAAa,IAAXC,EAAU,EAAVA,KACLC,QAAQC,IAAI,YACZpB,EAAUqB,EAAOH,EAAKhC,IAAKgC,EAAKI,cAChCtB,EAAU9B,QAEbqD,OAAO,SAAAC,GACJxB,EAAU9B,KACVuC,IAAKC,KAAK,QAASc,EAAEC,QAAS,cAiCjCJ,EAAQ,SAACnC,EAAKoC,GAAN,MAAuB,CACxCtD,KAAMH,EACNI,QAAQ,CACJiB,MACAoC,iBAaKI,EAAS,iBAAO,CACzB1D,KAAMH,IC9DG8D,EAAc,WAEvB,IAAM3B,EAAW4B,cAETC,EAAYC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAvCH,QAJqB,EAKa3E,EAAQ,CAC9C4D,MAAO,kBACPC,SAAU,WAPe,mBAKrBkB,EALqB,KAKTxE,EALS,KAUrBqD,EAAoBmB,EAApBnB,MAAOC,EAAakB,EAAblB,SAWf,OACI,qCACI,oBAAImB,UAAU,cAAd,oBAEA,uBAAMC,SAbM,SAACX,GACjBA,EAAEY,iBACFpC,EAAUa,EAAwBC,EAAOC,KAWNmB,UAAU,oDAAzC,UAEI,uBACIlE,KAAK,OACLqE,YAAY,QACZ1E,KAAK,QACL2E,aAAa,MACbJ,UAAU,cACVtE,MAAUkD,EACVyB,SAAa9E,IAGjB,uBACIO,KAAK,WACLqE,YAAY,WACZ1E,KAAK,WACL2E,aAAa,MACbJ,UAAU,cACVtE,MAAUmD,EACVwB,SAAa9E,IAGjB,wBACIO,KAAK,SACLkE,UAAY,4BACZM,SAAaX,EAHjB,mBAQA,sBAAKK,UAAU,wBAAf,UACI,6DAEA,sBACIA,UAAU,aACVO,QA3CM,WACtBzC,GDgBG,SAAEA,GACL5D,IAASY,OAAO0F,gBAAiB3F,GAC5BkE,MAAK,YAAgB,IAAZC,EAAW,EAAXA,KACNlB,EACIqB,EAAOH,EAAKhC,IAAKgC,EAAKI,qBCoBtB,UAII,qBAAKY,UAAU,sBAAf,SACI,qBAAKA,UAAU,cAAcS,IAAI,8EAA8EC,IAAI,oBAEvH,mBAAGV,UAAU,WAAb,SACI,4DAKZ,cAAC,IAAD,CAAMA,UAAU,OAAOW,GAAG,iBAA1B,uC,iBCrEHC,EAAiB,WAC1B,IAAM9C,EAAW4B,cAEVmB,EAAYjB,aAAa,SAAAC,GAAK,OAAIA,EAAMC,MAAxCe,SAHyB,EAMU7F,EAAQ,CAC9CS,KAAM,QACNmD,MAAO,kBACPC,SAAU,SACViC,UAAW,WAViB,mBAMxBf,EANwB,KAMZxE,EANY,KAaxBE,EAAqCsE,EAArCtE,KAAMmD,EAA+BmB,EAA/BnB,MAAOC,EAAwBkB,EAAxBlB,SAAUiC,EAAcf,EAAde,UASzBC,EAAc,WAEhB,OAA2B,IAAvBtF,EAAKuF,OAAOC,QACZnD,EAAUlC,EAAU,wBACb,GACAsF,IAAUC,QAASvC,GAGpBkC,IAAcjC,GAAYA,EAASoC,QAAU,GACnDnD,EAAUlC,EAAU,gDACb,IAEXkC,ENnC2B,CAC/BhC,KAAOH,KMmCI,IAPHmC,EAAUlC,EAAU,0BACb,IASf,OACI,qCACA,oBAAIoE,UAAU,cAAd,uBAEA,uBAAMC,SA3Ba,SAACX,GACpBA,EAAEY,iBACEa,KACAjD,EFJkC,SAAErC,EAAMmD,EAAOC,GACzD,OAAO,SAAEf,GAEL5D,IAASY,OAAOsG,+BAAgCxC,EAAOC,GAClDE,KADL,uCACW,6BAAA5C,EAAA,6DAAS6C,EAAT,EAASA,KAAT,SAEGA,EAAKqC,cAAc,CAAEjC,YAAa3D,IAFrC,OAGHqC,EACIqB,EAAMH,EAAKhC,IAAKgC,EAAKI,cAJtB,2CADX,uDAOQC,OAAO,SAAAC,GACPf,IAAKC,KAAK,QAASc,EAAEC,QAAS,aEPzB+B,CAAgC7F,EAAMmD,EAAOC,KAwBtBmB,UAAU,oDAA9C,UAGQa,GACA,qBAAKb,UAAU,oBAAf,SACKa,IAET,uBACI/E,KAAK,OACLqE,YAAY,OACZ1E,KAAK,OACL2E,aAAa,MACbJ,UAAU,cACVtE,MAAUD,EACV4E,SAAa9E,IAGjB,uBACIO,KAAK,OACLqE,YAAY,QACZ1E,KAAK,QACL2E,aAAa,MACbJ,UAAU,cACVtE,MAAUkD,EACVyB,SAAa9E,IAIjB,uBACIO,KAAK,WACLqE,YAAY,WACZ1E,KAAK,WACL2E,aAAa,MACbJ,UAAU,cACVtE,MAAUmD,EACVwB,SAAa9E,IAGjB,uBACIO,KAAK,WACLqE,YAAY,mBACZ1E,KAAK,YACL2E,aAAa,MACbJ,UAAU,cACVtE,MAAUoF,EACVT,SAAa9E,IAKjB,wBACIO,KAAK,SACLkE,UAAY,iCAFhB,sBASA,cAAC,IAAD,CAAMA,UAAU,OAAOW,GAAG,cAA1B,sCCxGCY,EAAa,WACtB,OACA,qBAAKvB,UAAU,aAAf,SACI,qBAAKA,UAAU,sBAAf,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CACIwB,KAAO,cACPC,UAAchC,IAElB,cAAC,IAAD,CACIiC,OAAK,EACLF,KAAO,iBACPC,UAAcb,IAElB,cAAC,IAAD,CAAUD,GAAI,wB,4BCfjBgB,GAAe,SAAC,GAItB,IAHHC,EAGE,EAHFA,gBACWC,EAET,EAFFJ,UACGK,EACD,+CAIF,OAFAC,aAAaC,QAAQ,WAAYF,EAAKG,SAASC,UAG3C,cAAC,IAAD,2BAAWJ,GAAX,IACIL,UAAa,SAACU,GAAD,OACPP,EACM,cAACC,EAAD,eAAgBM,IACjB,cAAC,IAAD,CAAUxB,GAAG,qBAMpCyB,KAAUC,UAAY,CAClBT,gBAAkBQ,KAAUE,KAAKC,WACjCd,UAAWW,KAAUI,KAAKD,YCrBvB,IAAME,GAAc,WAEvB,IAAM3E,EAAW4B,cACTgD,EAAW9C,aAAa,SAAAC,GAAK,OAAIA,EAAMzC,SAAvCsF,OAiBR,OACI,sBAAK1C,UAAU,gBAAf,UACI,qDAEA,uBACIxC,GAAG,eACH1B,KAAK,OACLL,KAAK,OACLkH,MAAO,CAAEC,QAAS,QAClBvC,SAhBa,SAACf,GACtB,IAAMpD,EAAOoD,EAAE9D,OAAOqH,MAAM,GACvB3G,GACD4B,EN0EkB,SAAE5B,GAC5B,8CAAO,WAAQ4B,EAAUG,GAAlB,iBAAA9B,EAAA,6DAEYuB,EAAeO,IAAWb,MAAjCsF,OAERnE,IAAKC,KAAK,CACNC,MAAO,eACPqE,KAAM,iBACNC,mBAAmB,EACnBC,mBAAmB,EACnBC,aAAc,WACV1E,IAAK2E,iBAVV,SAemBjH,EAAYC,GAf/B,OAeGiH,EAfH,OAgBHzF,EAAWQ,IAAMiF,EACjBrF,EAAUE,EAAeN,IACzBa,IAAK6E,QAlBF,2CAAP,wDM3EkBC,CAAgBnH,OAgB1B,gCACI,wBACI8D,UAAU,MACVO,QA1BW,WACvB+C,SAASC,cAAc,iBAAiBC,SAuBhC,qBAOA,wBACIxD,UAAU,MACVO,QArCG,WACfzC,EAAUE,EAAe0E,KAkCjB,yBCrCHe,GAAa,WAAO,IAEd9F,EAASiC,aAAY,SAAAC,GAAK,OAAIA,EAAMzC,SAA3CsF,OACF5E,EAAW4B,cAHW,EAIqB1E,EAAS2C,GAJ9B,mBAIpBoC,EAJoB,KAIRxE,EAJQ,KAIWF,EAJX,KAMpBoD,EAAoBsB,EAApBtB,MAAOhC,EAAasD,EAAbtD,KAAMe,EAAOuC,EAAPvC,GAEfkG,EAAWC,iBAAQhG,EAAKH,IAE9BoG,qBAAU,WACFjG,EAAKH,KAAOkG,EAASG,UACrBxI,EAAOsC,GACP+F,EAASG,QAAUlG,EAAKH,MAE7B,CAACG,EAAMtC,IAEVuI,qBAAU,WAEN9F,EAAUJ,EAAWqC,EAAWvC,GAAZ,eAAoBuC,OACzC,CAACA,EAAYjC,IAMhB,OACI,sBAAKkC,UAAU,sBAAf,UACI,cAAC,GAAD,IAEA,sBAAKA,UAAU,iBAAf,UAEI,uBACIlE,KAAK,OACLqE,YAAY,oBACZ1E,KAAO,QACPuE,UAAU,qBACVtE,MAAU+C,EACV2B,aAAc,MACdC,SAAa9E,IAGjB,0BACI4E,YAAY,mBACZH,UAAU,kBACVvE,KAAO,OACPC,MAAUe,EACV2D,aAAe,MACfC,SAAa9E,IAIZoC,EAAKO,KACN,qBAAK8B,UAAU,eAAf,SACI,qBAAKU,IAAI,OAAOD,IAAM9C,EAAKO,WAQvC,wBACI8B,UAAU,iBACVO,QA1CS,WACjBzC,EPwFqB,SAAEN,GAC3B,8CAAO,WAAQM,EAAUG,GAAlB,eAAA9B,EAAA,6DAEGa,EAAMiB,IAAWnD,KAAKkC,IAFzB,SAGGrC,EAAGyD,IAAH,UAAUpB,EAAV,0BAA+BQ,IAAMsG,SAHxC,OAKHhG,EAAUY,EAAalB,IALpB,2CAAP,wDOzFcuG,CAAgBvG,KAuCtB,0BCnECwG,GAAkB,WAC3B,OACI,sBAAKhE,UAAU,wBAAf,UAEI,iDAEI,uBAFJ,wBAKA,mBAAGA,UAAU,+B,oBCNZiE,GAAe,SAAC,GAAsC,IAAnCzG,EAAkC,EAAlCA,GAAI0G,EAA8B,EAA9BA,KAAMzF,EAAwB,EAAxBA,MAAOhC,EAAiB,EAAjBA,KAAMyB,EAAW,EAAXA,IAE7CJ,EAAW4B,cAEXyE,EAAWC,KAAOF,GASxB,OACI,sBAAKlE,UAAU,4DACXO,QATiB,WACrBzC,EAAUJ,EAAYF,EAAI,CACtBf,OAAMgC,QAAOyF,OAAMhG,UAMvB,UAKQA,GACA,qBACI8B,UAAU,yBACV2C,MAAU,CACN0B,eAAgB,QAChBC,gBAAgB,OAAD,OAAUpG,EAAV,QAM3B,sBAAK8B,UAAU,sBAAf,UACI,mBACIA,UAAU,uBADd,SAGKvB,IAEL,mBAAGuB,UAAU,yBAAb,SACMvD,OAOV,sBAAKuD,UAAW,0BAAhB,UACI,+BAAOmE,EAASI,OAAO,UACvB,mCAAOJ,EAASI,OAAO,MAAvB,cC/CHC,GAAiB,WAAO,IAEzBpH,EAAUwC,aAAY,SAAAC,GAAK,OAAIA,EAAMzC,SAArCA,MAGR,OACI,qBAAK4C,UAAU,sBAAf,SAGQ5C,EAAMqH,KAAK,SAAA9G,GAAI,OACX,cAAC,GAAD,eAESA,GADCA,EAAKH,UCTtBkH,GAAU,WAEnB,IAAM5G,EAAW4B,cAETjE,EAASmE,aAAY,SAAAC,GAAK,OAAIA,EAAM/E,QAApCW,KAYR,OACI,wBAAOuE,UAAU,mBAAjB,UAEI,sBAAKA,UAAU,0BAAf,UACI,qBAAIA,UAAU,OAAd,UACI,mBAAGA,UAAU,gBACb,qCAASvE,QAGb,wBACIuE,UAAU,MACVO,QAtBK,WACjBzC,EVgDJ,uCAAO,WAAQA,GAAR,SAAA3B,EAAA,sEACGjC,IAASY,OAAO6J,UADnB,OAEH7G,EAAU0B,KACV1B,EDwEyB,CAC7BhC,KAAMH,IC5EC,2CAAP,wDU7BY,uBAQJ,sBACIqE,UAAU,qBACVO,QAzBS,WACjBzC,EXVJ,uCAAO,WAAOA,EAAUG,GAAjB,mBAAA9B,EAAA,6DAEKa,EAAQiB,IAAWnD,KAAnBkC,IAEF4H,EAAU,CACZnG,MAAQ,GACRhC,KAAM,GACNyH,MAAM,IAAIW,MAAOC,WAGrB7F,QAAQC,IAAI,UAAYlC,GAVrB,SAWerC,EAAGsC,WAAH,UAAkBD,EAAlB,mBAAwC+H,IAAKH,GAX5D,OAWExG,EAXF,OAaJN,EAAWJ,EAAYU,EAAIZ,GAAIoH,IAE/B9G,EAAUF,EAAaQ,EAAIZ,GAAIoH,IAf3B,2CAAP,0DWgCQ,UAII,mBAAG5E,UAAU,+BACb,mBAAGA,UAAU,OAAb,0BAKJ,cAAC,GAAD,QC1CCgF,GAAgB,WAAO,IAExBtC,EAAW9C,aAAa,SAAAC,GAAK,OAAIA,EAAMzC,SAAvCsF,OAER,OACI,sBAAK1C,UAAU,0EAAf,UAEI,cAAC,GAAD,IAEA,+BAGU0C,EAEE,cAAC,GAAD,IAEA,cAAC,GAAD,UCnBXuC,GAAc,SAAC,GAIrB,IAHHrD,EAGE,EAHFA,gBACWC,EAET,EAFFJ,UACGK,EACD,+CAEF,OACI,cAAC,IAAD,2BAAWA,GAAX,IACAL,UAAa,SAACU,GAAD,OACFP,EAEI,cAAC,IAAD,CAAUjB,GAAG,MADZ,cAACkB,EAAD,eAAgBM,SAOxCC,KAAUC,UAAY,CAClBT,gBAAkBQ,KAAUE,KAAKC,WACjCd,UAAWW,KAAUI,KAAKD,YCLvB,IAAM2C,GAAY,WAErB,IAAMpH,EAAW4B,cAFU,EAIOxE,oBAAS,GAJhB,mBAInBiK,EAJmB,KAITC,EAJS,OAKWlK,oBAAS,GALpB,mBAKnBmK,EALmB,KAKPC,EALO,KA6B3B,OApBA1B,qBAAU,WAEN1J,IAASY,OAAOyK,mBAAhB,uCAAoC,WAAMvG,GAAN,SAAA7C,EAAA,uDAEhC,OAAK6C,QAAL,IAAKA,OAAL,EAAKA,EAAMhC,MACPc,EAAUqB,EAAOH,EAAKhC,IAAKgC,EAAKI,cAChCkG,GAAe,GACfxH,EAAUD,EAAmBmB,EAAKhC,OAGlCsI,GAAe,GAGnBF,GAAY,GAXoB,2CAApC,yDAeD,CAAEtH,EAAUsH,EAAaE,IAGvBH,EAEG,yCAMJ,cAAC,IAAD,UACI,8BACI,eAAC,IAAD,WACI,cAAC,GAAD,CACI3D,KAAK,QACLC,UAAYF,EACZK,gBAAkByD,IAGtB,cAAC,GAAD,CACI3D,OAAK,EACLE,gBAAkByD,EAClB7D,KAAK,IACLC,UAAYuD,KAGhB,cAAC,IAAD,CAAUrE,GAAG,wB,kBCrE3B1F,GAAe,CACjB0E,SAAU,EACVkB,SAAU,M,SCFR5F,GAAe,CACjBmC,MAAO,GACPsF,OAAQ,MCEN8C,GAAsC,qBAAXC,QAA0BA,OAAOC,sCAAyCC,KAErGC,GAAWC,aAAgB,CAC7B/K,KCPuB,WAA0B,IAAxB+E,EAAuB,uDAAf,GAAIiG,EAAW,uCAEhD,OAASA,EAAOhK,MACZ,KAAKH,EACD,MAAO,CACHqB,IAAK8I,EAAO/J,QAAQiB,IACpBvB,KAAMqK,EAAO/J,QAAQqD,aAG7B,KAAKzD,EACD,MAAO,GAEX,QACI,OAAOkE,IDLfC,GFFqB,WAAoC,IAAlCD,EAAiC,uDAAzB5E,GAAc6K,EAAW,uCAExD,OAAQA,EAAOhK,MACX,KAAKH,EACD,OAAO,2BACAkE,GADP,IAEIgB,SAAUiF,EAAO/J,UAEzB,KAAKJ,EACD,OAAO,2BACAkE,GADP,IAEIgB,SAAU,OAElB,KAAKlF,EACD,OAAO,2BACAkE,GADP,IAEIF,SAAS,IAEjB,KAAKhE,EACD,OAAO,2BACAkE,GADP,IAEIF,SAAS,IAEjB,QACI,OAAOE,IErBfzC,MDJwB,WAAoC,IAAlCyC,EAAiC,uDAAzB5E,GAAc6K,EAAW,uCAE3D,OAAQA,EAAOhK,MACX,KAAKH,EACD,OAAO,2BACAkE,GADP,IAEI6C,OAAO,eACAoD,EAAO/J,WAGtB,KAAKJ,EACD,kCACOkE,GADP,IAEIzC,MAAM,CAAE0I,EAAO/J,SAAV,oBAAsB8D,EAAMzC,UAGzC,KAAKzB,EACD,OAAO,2BACAkE,GADP,IAEIzC,MAAM,aAAM0I,EAAO/J,WAG3B,KAAKJ,EACD,OAAO,2BACAkE,GADP,IAEIzC,MAAOyC,EAAMzC,MAAMqH,KACf,SAAA9G,GAAI,OAAIA,EAAKH,KAAMsI,EAAO/J,QAAQyB,GAC5BsI,EAAO/J,QAAQ4B,KACfA,OAGlB,KAAKhC,EACD,OAAO,2BACAkE,GADP,IAEI6C,OAAQ,KACRtF,MAAOyC,EAAMzC,MAAM2I,QACf,SAAApI,GAAI,OAAIA,EAAKH,KAAOsI,EAAO/J,aAGvC,KAAKJ,EACD,OAAO,2BACAkE,GADP,IAEI6C,OAAQ,KACRtF,MAAO,KAGf,QACI,OAAOyC,MCtCNmG,GAAQC,aACjBL,GACAJ,GACIU,aAAgBC,QEdXC,GAAa,WACtB,OACI,cAAC,IAAD,CAAUJ,MAAUA,GAApB,SACI,cAAC,GAAD,O,OCHZK,IAASC,OACP,cAAC,GAAD,IACAhD,SAASiD,eAAe,W","file":"static/js/main.e25f8986.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n    apiKey:  process.env.REACT_APP_APIKEY,\r\n    authDomain: process.env.REACT_APP_AUTHDOMAIN,                \r\n    projectId:process.env.REACT_APP_PROJECTID,\r\n    storageBucket: process.env.REACT_APP_STORAGEBUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGINGSENDERID,\r\n    appId:  process.env.REACT_APP_APPID,\r\n  };\r\n\r\n  // var firebaseConfigTesting = {\r\n  //   apiKey: \"AIzaSyBWiEcyLFdvkCNgmrxz-Jvu4HEJIRoYvfc\",\r\n  //   authDomain: \"control-classroom-6989a.firebaseapp.com\",\r\n  //   databaseURL: \"https://control-classroom-6989a.firebaseio.com\",\r\n  //   projectId: \"control-classroom-6989a\",\r\n  //   storageBucket: \"control-classroom-6989a.appspot.com\",\r\n  //   messagingSenderId: \"211383023983\",\r\n  //   appId: \"1:211383023983:web:0cf055f25e2bcd3251109a\"\r\n  // };\r\n\r\n// if(process.env.NODE_ENV === 'test') {\r\n//   //testing \r\n//   firebase.initializeApp(firebaseConfigTesting);\r\n\r\n// }else{\r\n//   //dev / prod\r\n//   firebase.initializeApp(firebaseConfig);\r\n\r\n// }\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {\r\n    db,\r\n    googleAuthProvider,\r\n    firebase\r\n}\r\n\r\n","import { useState } from \"react\"\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = (setNewValues = initialState) => {\r\n        setValues( setNewValues );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","export const types = {\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    notesAddNew: '[Notes] New notes',\r\n    notesActive: '[Notes] Set active notes',\r\n    notesLoad: '[Notes] Load notes',\r\n    notesUpdated: '[Notes] Update note',\r\n    notesFileUrl: '[Notes] Update image url',\r\n    notesDelete: '[Notes] Deleta note',\r\n    notesLogoutCleaning: '[Notes] Logout Cleaning',\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\nexport const setError = ( err ) => ({\r\n    type : types.uiSetError,\r\n    payload: err\r\n});\r\n\r\nexport const RemoveError = ( ) => ({\r\n    type : types.uiRemoveError,\r\n\r\n});\r\n\r\nexport const uiStartLoading = () => ({\r\n    type: types.uiStartLoading\r\n});\r\n\r\nexport const uiFinishLoading = () => ({\r\n    type: types.uiFinishLoading,\r\n});","\r\nexport const fileUpload = async( file ) => {\r\n\r\n    const cloudURL = 'https://api.cloudinary.com/v1_1/fredy/upload';\r\n\r\n    const formData = new FormData();\r\n    formData.append('upload_preset', 'react-journal');\r\n    formData.append('file', file );\r\n\r\n    try {\r\n        const resp = await fetch( cloudURL,{\r\n            method : 'POST',\r\n            body: formData\r\n        });\r\n\r\n        if( resp.ok ){\r\n            const cloudRes = await resp.json();\r\n            return cloudRes.secure_url;\r\n        }else{\r\n            return null;\r\n        }\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n\r\n}","import { db } from \"../firebase/firebase-config\"\r\n\r\nexport const loadNotes = async( uid ) => {\r\n    \r\n    \r\n    const notesSnap = await db.collection(`${uid}/journal/notes`).get();\r\n    const notes = [];\r\n    notesSnap.forEach( snapHijo => {\r\n        notes.push( {\r\n            id: snapHijo.id,\r\n            ...snapHijo.data()    \r\n        });\r\n    });\r\n    \r\n    return notes;\r\n}","import Swal from \"sweetalert2\";\r\nimport { db } from \"../firebase/firebase-config\";\r\nimport { fileUpload } from \"../helpers/fileUpload\";\r\nimport { loadNotes } from \"../helpers/loadNotes\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const startNewNotes = () => {\r\n    return async( dispatch, getState ) => {\r\n\r\n        const { uid } = getState().auth;\r\n        \r\n        const newNote = {\r\n            title : '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n        console.log('uid  - ' + uid); \r\n       const doc = await  db.collection(`${ uid }/journal/notes`).add( newNote );\r\n\r\n       dispatch ( activeNote( doc.id, newNote ));\r\n\r\n       dispatch( addNewNote(  doc.id, newNote) );\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const activeNote = ( id, note ) => ({\r\n    \r\n    type: types.notesActive,\r\n    payload: {\r\n        id, \r\n        ...note\r\n    }\r\n\r\n});\r\n\r\nexport const addNewNote = (id, note) => ({\r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id, \r\n        ...note\r\n    }\r\n\r\n})\r\n\r\nexport const startLoadingNotes = ( uid ) => {\r\n    return async( dispatch ) => {\r\n        const notes = await loadNotes( uid );\r\n        dispatch( setNotes( notes ) );\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const setNotes = ( notes ) => ({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n})\r\n\r\nexport const startSaveNote = ( note ) => {\r\n    return async ( dispatch, getState) => {\r\n\r\n        const { uid } = getState().auth;\r\n        \r\n        if( !note.url ){\r\n            delete note.url\r\n        }\r\n\r\n        const noteToFirestore = { ...note }\r\n        delete noteToFirestore.id;\r\n\r\n        await db.doc(`${uid}/journal/notes/${note.id}`).update( noteToFirestore );\r\n\r\n        dispatch( refreshNote (note.id, noteToFirestore))\r\n        Swal.fire('Saved', note.title, 'success');\r\n    }\r\n}\r\n\r\nexport const refreshNote = ( id, note ) => ({\r\n    \r\n    type: types.notesUpdated,\r\n    payload: {\r\n        id,\r\n        note: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n\r\n});\r\n\r\nexport const startUploading = ( file ) => {\r\n    return async ( dispatch, getState ) => {\r\n\r\n        const { active:activeNote } = getState().notes;\r\n        \r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Please wait...',\r\n            allowOutsideClick: false,\r\n            showConfirmButton: false,\r\n            onBeforeOpen: () => {\r\n                Swal.showLoading();\r\n            }\r\n\r\n        })\r\n\r\n        const fileUrl = await fileUpload( file );\r\n        activeNote.url = fileUrl; \r\n        dispatch( startSaveNote( activeNote ));\r\n        Swal.close();\r\n\r\n    }\r\n}\r\n\r\nexport const startDeleting = ( id ) => {\r\n    return async ( dispatch, getState ) => {\r\n        \r\n        const uid = getState().auth.uid;\r\n        await db.doc(`${uid}/journal/notes/${id}`).delete();\r\n\r\n        dispatch( deleteNote ( id ));\r\n\r\n    }\r\n} \r\n\r\nexport const deleteNote = ( id ) => ({\r\n    type: types.notesDelete,\r\n    payload: id\r\n\r\n});\r\n\r\nexport const cleanNotes = () =>( {\r\n    type: types.notesLogoutCleaning,\r\n})","import { types } from \"../types/types\"\r\nimport { firebase, googleAuthProvider } from '../firebase/firebase-config';\r\nimport { uiFinishLoading, uiStartLoading } from \"./ui\";\r\nimport Swal from 'sweetalert2';\r\nimport { cleanNotes } from \"./notes\";\r\n\r\nexport const startLoginEmailPassword = ( email, password ) =>{\r\n    return ( dispatch ) => {\r\n        dispatch( uiStartLoading() );\r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n            .then( ({user}) => {\r\n                console.log(\"HOALAASs\");\r\n                dispatch( login (user.uid, user.displayName));\r\n                dispatch( uiFinishLoading() );\r\n            })\r\n            .catch( e =>{\r\n                dispatch( uiFinishLoading() );\r\n                Swal.fire('Error', e.message, 'error');\r\n            })\r\n    }\r\n}\r\n\r\nexport const startRegisterWithEmailPassword = ( name, email, password) => {\r\n    return ( dispatch ) => {\r\n\r\n        firebase.auth().createUserWithEmailAndPassword( email, password)\r\n            .then( async ({ user }) => {\r\n                \r\n                await user.updateProfile({ displayName: name })\r\n                dispatch( \r\n                    login(user.uid, user.displayName)\r\n                )\r\n            } ).catch( e =>{\r\n                Swal.fire('Error', e.message, 'error');\r\n            })\r\n\r\n    }\r\n}\r\n\r\nexport const startGoogleLogin = () => {\r\n    return ( dispatch ) => {\r\n        firebase.auth().signInWithPopup( googleAuthProvider )\r\n            .then(( { user } )=> {\r\n                dispatch(\r\n                    login( user.uid, user.displayName)\r\n                )\r\n            })\r\n    }\r\n}\r\n\r\nexport const login = (uid, displayName) => ({\r\n    type: types.login,\r\n    payload:{\r\n        uid,\r\n        displayName\r\n    }\r\n})\r\n\r\n\r\nexport const startLogout = () => {\r\n    return async ( dispatch ) => {\r\n        await firebase.auth().signOut();\r\n        dispatch( logout() );\r\n        dispatch ( cleanNotes() );\r\n    }\r\n}\r\n\r\nexport const logout = () => ({\r\n    type: types.logout\r\n});\r\n\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading } = useSelector(state => state.ui)\r\n    const [ formValues, handleInputChange ] = useForm({\r\n        email: 'fredo@gmail.com',\r\n        password: '123456'\r\n    });\r\n\r\n    const { email, password } = formValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch( startLoginEmailPassword(email, password) );\r\n    }\r\n\r\n    const handleGoogleLogin = () =>{\r\n        dispatch( startGoogleLogin() );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className='auth__title'>Login </h3>\r\n\r\n            <form onSubmit = {handleLogin} className=\"animate__animated animate__fadeIn animate__faster\">\r\n\r\n                <input\r\n                    type='text'\r\n                    placeholder='Email'\r\n                    name='email'\r\n                    autoComplete='off'\r\n                    className=\"auth__input\"\r\n                    value = { email }\r\n                    onChange = { handleInputChange }\r\n                />\r\n\r\n                <input\r\n                    type='password'\r\n                    placeholder='Password'\r\n                    name='password'\r\n                    autoComplete='off'\r\n                    className=\"auth__input\"\r\n                    value = { password }\r\n                    onChange = { handleInputChange }\r\n                />\r\n\r\n                <button \r\n                    type=\"submit\" \r\n                    className = 'btn btn-primary btn-block'\r\n                    disabled = { loading }\r\n                >\r\n                    Login\r\n                </button>\r\n\r\n                <div className=\"auth__social-networks\">\r\n                    <p> Login with Social Networks </p>\r\n\r\n                    <div \r\n                        className=\"google-btn\"\r\n                        onClick= { handleGoogleLogin }\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                \r\n                <Link className=\"link\" to='/auth/register'>Create New Account</Link>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useForm } from '../../hooks/useForm';\r\nimport validator from \"validator\";\r\nimport { RemoveError, setError } from '../../actions/ui';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startRegisterWithEmailPassword } from \"../../actions/auth\";\r\n\r\nexport const RegisterScreen = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const {msgError} = useSelector( state => state.ui);\r\n\r\n\r\n    const [ formValues, handleInputChange ] = useForm({\r\n        name: 'Fredy',\r\n        email: 'fredo@gmail.com',\r\n        password: '123456',\r\n        password2: '123456'\r\n    });\r\n\r\n    const { name, email, password, password2 } = formValues;\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n        if( isFormValid() ){\r\n            dispatch(startRegisterWithEmailPassword( name, email, password ));\r\n        }\r\n    }\r\n\r\n    const isFormValid = () => {\r\n\r\n        if( name.trim().length === 0 ){\r\n            dispatch( setError (' Name is required '));\r\n            return false;\r\n        }else if( !validator.isEmail( email )){\r\n            dispatch( setError (' Email is not valid ')); \r\n            return false;\r\n        }else if( password2 !== password || password.length <= 5){\r\n            dispatch( setError (' Passwords don\\'t match or not long enough '));\r\n            return false;\r\n        }\r\n        dispatch(RemoveError());\r\n        return true;\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <h3 className='auth__title'>Register </h3>\r\n\r\n        <form onSubmit = { handleRegister } className=\"animate__animated animate__fadeIn animate__faster\">\r\n\r\n            {\r\n                msgError &&\r\n                <div className='auth__alert-error'>\r\n                    {msgError}\r\n                </div>}\r\n            <input\r\n                type='text'\r\n                placeholder='Name'\r\n                name='name'\r\n                autoComplete='off'\r\n                className=\"auth__input\"\r\n                value = { name }\r\n                onChange = { handleInputChange }\r\n\r\n            />\r\n            <input\r\n                type='text'\r\n                placeholder='Email'\r\n                name='email'\r\n                autoComplete='off'\r\n                className=\"auth__input\"\r\n                value = { email }\r\n                onChange = { handleInputChange }\r\n\r\n            />\r\n\r\n            <input\r\n                type='password'\r\n                placeholder='Password'\r\n                name='password'\r\n                autoComplete='off'\r\n                className=\"auth__input\"\r\n                value = { password }\r\n                onChange = { handleInputChange }\r\n\r\n            />\r\n            <input\r\n                type='password'\r\n                placeholder='Confirm Password'\r\n                name='password2'\r\n                autoComplete='off'\r\n                className=\"auth__input\"\r\n                value = { password2 }\r\n                onChange = { handleInputChange }\r\n\r\n            />\r\n            \r\n\r\n            <button \r\n                type=\"submit\" \r\n                className = 'btn btn-primary btn-block mb-5'\r\n\r\n            >\r\n                Register\r\n            </button>\r\n\r\n            \r\n            <Link className=\"link\" to='/auth/login'>Already Register?</Link>\r\n        </form>\r\n    </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Route, Switch, Redirect } from 'react-router-dom'\r\nimport { LoginScreen } from '../components/auth/LoginScreen'\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen'\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n    <div className=\"auth__main\">\r\n        <div className='auth__box-container'>\r\n            <Switch>\r\n                <Route \r\n                    path = '/auth/login'\r\n                    component = { LoginScreen}/>\r\n\r\n                <Route \r\n                    exact\r\n                    path = '/auth/Register'\r\n                    component = { RegisterScreen  } />\r\n\r\n                <Redirect to= '/auth/login' />\r\n            </Switch>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component, \r\n    ...rest\r\n}) => {\r\n\r\n    localStorage.setItem('lastPath', rest.location.pathname);\r\n    \r\n    return (\r\n        <Route {...rest} \r\n            component ={ (props) => (\r\n                ( isAuthenticated ) \r\n                    ?  (<Component { ...props } />  )\r\n                    : (<Redirect to='/auth/login'/>)\r\n            )} \r\n         />\r\n    )\r\n}\r\n\r\nPropTypes.propTypes = {\r\n    isAuthenticated : PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startSaveNote, startUploading } from '../../actions/notes';\r\n\r\nexport const NotesAppBar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { active } = useSelector( state => state.notes );\r\n\r\n    const handleSave = () => {\r\n        dispatch( startSaveNote( active ) );\r\n    }\r\n\r\n    const handlePictureClick = () => {\r\n        document.querySelector('#fileSelector').click();\r\n    }\r\n    \r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if ( file ) {\r\n            dispatch( startUploading( file ) );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span>28 de agosto 2020</span>\r\n\r\n            <input \r\n                id=\"fileSelector\"\r\n                type=\"file\"\r\n                name=\"file\"\r\n                style={{ display: 'none' }}\r\n                onChange={ handleFileChange }\r\n            />\r\n\r\n            <div>\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={ handlePictureClick }\r\n                >\r\n                    Picture\r\n                </button>\r\n\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={ handleSave }\r\n                >\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { activeNote, startDeleting } from '../../actions/notes';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { NotesAppBar } from './NotesAppBar';\r\n\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const { active:note } = useSelector(state => state.notes)\r\n    const dispatch = useDispatch();\r\n    const [ formValues, handleInputChange, reset ] = useForm( note );\r\n\r\n    const { title, body, id } = formValues; \r\n\r\n    const activeId = useRef( note.id );\r\n\r\n    useEffect(() => {\r\n        if( note.id !== activeId.current ){\r\n            reset( note );\r\n            activeId.current = note.id\r\n        }\r\n    }, [note, reset])\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch( activeNote(formValues.id, {...formValues}));\r\n    }, [formValues, dispatch]);\r\n\r\n    const handleDelete = () => {\r\n        dispatch( startDeleting ( id ) );\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n            <NotesAppBar />\r\n\r\n            <div className=\"notes__content\">\r\n\r\n                <input \r\n                    type='text'\r\n                    placeholder=\"Something Cool...\"\r\n                    name = 'title'\r\n                    className='notes__title-input'\r\n                    value = { title }\r\n                    autoComplete= 'off'\r\n                    onChange = { handleInputChange }\r\n                />\r\n\r\n                <textarea\r\n                    placeholder=\"What's up today?\"\r\n                    className=\"notes__textarea\"\r\n                    name = 'body'\r\n                    value = { body }\r\n                    autoComplete = 'off'\r\n                    onChange = { handleInputChange }\r\n                >\r\n                </textarea>\r\n                {\r\n                    (note.url ) &&\r\n                    <div className=\"notes__image\">\r\n                        <img alt=\"Algo\" src={ note.url} />\r\n\r\n\r\n                    </div>\r\n                }\r\n\r\n            </div>\r\n            \r\n            <button\r\n                className=\"btn btn-danger\"\r\n                onClick = { handleDelete }\r\n            >\r\n                Eliminar\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n\r\n            <p>\r\n                Select Something \r\n                <br/>\r\n                pr create an entry\r\n            </p>\r\n            <i className=\"far fa-star fa-4x mt-5\"></i>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport moment from \"moment\";\r\nimport { activeNote } from '../../actions/notes';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nexport const JournalEntry = ( { id, date, title, body, url } ) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const noteDate = moment(date);\r\n\r\n    const handleEntryClick = () => {\r\n        dispatch( activeNote (id, {\r\n            body, title, date, url\r\n        }));\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"journal__entry pointer  animate__animated animate__fadeIn\"  \r\n            onClick = { handleEntryClick }\r\n            >\r\n            \r\n            {\r\n                url &&\r\n                <div \r\n                    className=\"journal__entry-picture\"\r\n                    style = { { \r\n                        backgroundSize: 'cover',\r\n                        backgroundImage: `url(${ url  })`,\r\n                     } }\r\n                ></div>\r\n\r\n            }\r\n\r\n            <div className=\"journal__entry-body\">\r\n                <p \r\n                    className=\"journal__entry-title\"\r\n                >\r\n                    {title}\r\n                </p>\r\n                <p className=\"journal__entry-content\">\r\n                    { body }\r\n\r\n                </p>\r\n\r\n\r\n            </div>\r\n            \r\n            <div className =\"journal__entry_date-box\">\r\n                <span>{noteDate.format('dddd')}</span>\r\n                <h4> { noteDate.format('Do') } </h4>\r\n\r\n            </div>\r\n           \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { JournalEntry } from './JournalEntry';\r\n\r\nexport const JournalEntries = () => {\r\n\r\n    const { notes } = useSelector(state => state.notes)\r\n    \r\n\r\n    return (\r\n        <div className=\"journal__entries   \">\r\n            \r\n            {\r\n                notes.map( note => (\r\n                    <JournalEntry\r\n                        key={ note.id }\r\n                        { ...note } />\r\n\r\n                ))\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\nimport { startNewNotes } from '../../actions/notes';\r\nimport { JournalEntries } from './JournalEntries'\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { name } = useSelector(state => state.auth)\r\n    const handleLogout = () => {\r\n        dispatch( startLogout() );\r\n\r\n    }\r\n\r\n    const handleAddNew = () => {\r\n        dispatch( startNewNotes());\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n            \r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\"></i>\r\n                    <span> { name }</span>\r\n                </h3>\r\n\r\n                <button\r\n                    className=\"btn\"\r\n                    onClick = { handleLogout }                \r\n                >\r\n                    Logout\r\n                </button>\r\n            </div>\r\n\r\n            <div \r\n                className=\"journal__new-entry\"\r\n                onClick = { handleAddNew }\r\n                >\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className=\"mt-5\">\r\n                    New entry\r\n                </p>\r\n            </div>\r\n\r\n            <JournalEntries />    \r\n\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { NoteScreen } from '../notes/NoteScreen'\r\nimport { NothingSelected } from './NothingSelected'\r\n\r\nimport { Sidebar } from './Sidebar'\r\n\r\nexport const JournalScreen = () => {\r\n    \r\n    const { active } = useSelector( state => state.notes )\r\n\r\n    return (\r\n        <div className=\"journal__main-content animate__animated animate__fadeIn animate__faster\">\r\n            \r\n            <Sidebar />\r\n\r\n            <main>\r\n                {/* <NothingSelected /> */}\r\n                {\r\n                    ( active )\r\n                        ?\r\n                        <NoteScreen/>\r\n                        :\r\n                        <NothingSelected />\r\n\r\n                }\r\n            </main>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component, \r\n    ...rest\r\n}) => {\r\n    \r\n    return (\r\n        <Route {...rest} \r\n        component ={ (props) => (\r\n                ( !isAuthenticated ) \r\n                    ?  (<Component { ...props } />  )\r\n                    : (<Redirect to='/'/>)\r\n            )} \r\n         />\r\n    )\r\n}\r\n\r\nPropTypes.propTypes = {\r\n    isAuthenticated : PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useEffect, useState } from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n  } from 'react-router-dom';\r\n\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { firebase } from '../firebase/firebase-config'\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { PrivateRoute } from './PrivateRoute';\r\n\r\nimport { JournalScreen } from '../components/journal/JournalScreen';\r\nimport { login } from '../actions/auth';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { startLoadingNotes } from '../actions/notes';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [ checking, setChecking ] = useState(true);\r\n    const [ isLoggedIn, setIsLoggedIn ] = useState(false);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        \r\n        firebase.auth().onAuthStateChanged( async(user) => {\r\n\r\n            if ( user?.uid ) {\r\n                dispatch( login( user.uid, user.displayName ) );\r\n                setIsLoggedIn( true );\r\n                dispatch( startLoadingNotes( user.uid ) );\r\n\r\n            } else {\r\n                setIsLoggedIn( false );\r\n            }\r\n\r\n            setChecking(false);\r\n\r\n        });\r\n        \r\n    }, [ dispatch, setChecking, setIsLoggedIn ])\r\n\r\n\r\n    if ( checking ) {\r\n        return (\r\n            <h1>Wait...</h1>\r\n        )\r\n    }\r\n\r\n    \r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute \r\n                        path=\"/auth\"\r\n                        component={ AuthRouter }\r\n                        isAuthenticated={ isLoggedIn }\r\n                    />\r\n\r\n                    <PrivateRoute \r\n                        exact\r\n                        isAuthenticated={ isLoggedIn }\r\n                        path=\"/\"\r\n                        component={ JournalScreen }\r\n                    />\r\n\r\n                    <Redirect to=\"/auth/login\" />\r\n\r\n\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    loading : false, \r\n    msgError: null\r\n}\r\n\r\n\r\nexport const uiReducer = ( state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msgError: null\r\n            }\r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null\r\n}\r\n\r\nexport const notesReducer = ( state = initialState, action) => {\r\n    \r\n    switch (action.type) {\r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload,\r\n                }\r\n            }\r\n        case types.notesAddNew:\r\n            return{\r\n                ...state,\r\n                notes: [action.payload, ...state.notes]\r\n            }\r\n        \r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes: [ ...action.payload ]\r\n            }\r\n\r\n        case types.notesUpdated:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    note => note.id ===action.payload.id\r\n                        ? action.payload.note\r\n                        : note\r\n                )\r\n            }\r\n        case types.notesDelete:\r\n            return {\r\n                ...state, \r\n                active: null, \r\n                notes: state.notes.filter(\r\n                    note => note.id !== action.payload\r\n                )\r\n            }\r\n        case types.notesLogoutCleaning:\r\n            return {\r\n                ...state, \r\n                active: null, \r\n                notes: []\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import thunk from 'redux-thunk';\r\nimport { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport { authReducer } from \"../reducers/authReducer\";\r\nimport { uiReducer } from '../reducers/uiReducers';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n})\r\n\r\n\r\n\r\nexport const store = createStore( \r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n); ","import { types } from \"../types/types\";\r\n\r\nexport const authReducer = ( state = {}, action) => {\r\n\r\n    switch ( action.type ) {\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }            \r\n        \r\n        case types.logout:\r\n            return {}\r\n\r\n        default:\r\n            return state ;\r\n    }\r\n\r\n}","import React from 'react'\r\nimport { Provider } from \"react-redux\";\r\nimport { AppRouter } from './routers/AppRouter'\r\nimport { store } from './store/store';\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store = { store }>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss';\n\nReactDOM.render(\n  <JournalApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}